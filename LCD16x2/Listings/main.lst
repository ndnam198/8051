C51 COMPILER V9.60.0.0   MAIN                                                              09/16/2019 18:40:06 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: A:\Learning Tools\KeiC 5\Keilc_C51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTE
                    -ND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX51.H>
   2          #include "LCD16x2.h"
*** WARNING C318 IN LINE 2 OF main.c: can't open file 'LCD16x2.h'
   3           
   4          #define LCD_RS  P1_0
   5          #define LCD_RW  P1_1
   6          #define LCD_EN  P1_2
   7          #define LCD_D4  P0_4
   8          #define LCD_D5  P0_5
   9          #define LCD_D6  P0_6
  10          #define LCD_D7  P0_7
  11          
  12          void delay_us(unsigned int t){
  13   1              unsigned int i;
  14   1              for(i=0;i<t;i++);
  15   1      }
  16          void delay_ms(unsigned int t){
  17   1              unsigned int i,j;
  18   1              for(i=0;i<t;i++)
  19   1              for(j=0;j<125;j++);}
  20          /***********Ctr giao tiep LCD 16x2 4bit**********************/
  21          void LCD_Enable(void){      //tao mot xung suon xuong o EN de bao hieu 
  22   1              LCD_EN =1;
  23   1              delay_us(3);
  24   1              LCD_EN =0;
  25   1              delay_us(50); 
  26   1      }
  27          //Ham Gui 4 Bit Du Lieu Ra LCD
  28          void LCD_Send4Bit(unsigned char Data){      // gui 4 bit 
  29   1              LCD_D4=Data & 0x01;
  30   1              LCD_D5=(Data>>1)&1;
  31   1              LCD_D6=(Data>>2)&1;
  32   1              LCD_D7=(Data>>3)&1;
  33   1      }
  34          // Ham Gui 1 Lenh Cho LCD
  35          void LCD_SendCommand(unsigned char command){
  36   1              LCD_Send4Bit(command >>4);/* Gui 4 bit cao */
  37   1              LCD_Enable();
  38   1              LCD_Send4Bit(command); /* Gui 4 bit thap*/
  39   1              LCD_Enable();
  40   1      }
  41          void LCD_Clear(){// Ham Xoa Man Hinh LCD
  42   1              LCD_SendCommand(0x01); 
  43   1              delay_us(10);
  44   1      }
  45          // Ham Khoi Tao LCD
  46          void LCD_Init(){
  47   1              LCD_Send4Bit(0x00);   //turn on LCD
  48   1              delay_ms(20);
  49   1              LCD_RS=0;
  50   1              LCD_RW=0;
  51   1              LCD_Send4Bit(0x03);   //function setting
  52   1              LCD_Enable();
  53   1              delay_ms(5);
C51 COMPILER V9.60.0.0   MAIN                                                              09/16/2019 18:40:06 PAGE 2   

  54   1              LCD_Enable();
  55   1              delay_us(100);
  56   1              LCD_Enable();
  57   1              LCD_Send4Bit(0x02);   //di chuyen con tro ve dau man hnh
  58   1              LCD_Enable();
  59   1              LCD_SendCommand( 0x28 ); //lua chon che do 4 bit
  60   1              LCD_SendCommand( 0x0c);  // bat hien thi va tat con tro di
  61   1              LCD_SendCommand( 0x06 );
  62   1              LCD_SendCommand(0x01);
  63   1      }
  64          void LCD_Gotoxy(unsigned char x, unsigned char y){
  65   1              unsigned char address;
  66   1              if(!y)address=(0x80+x);
  67   1              else address=(0xc0+x);
  68   1              delay_us(1000);
  69   1              LCD_SendCommand(address);
  70   1              delay_us(50);
  71   1      }
  72          void LCD_PutChar(unsigned char Data){
  73   1              LCD_RS=1;
  74   1              LCD_SendCommand(Data);
  75   1              LCD_RS=0 ;
  76   1      }
  77          void LCD_Puts(char *s){
  78   1              while (*s){
  79   2                      LCD_PutChar(*s);
  80   2                      s++;
  81   2              }
  82   1      }
  83          
  84          void main(){
  85   1          LCD_Init();
  86   1          LCD_Gotoxy(0,0);
  87   1          LCD_Puts("hello world");
  88   1          delay_ms(3000);
  89   1          LCD_Clear();
  90   1          while(1){
  91   2            LCD_Puts("LCD 16x2 project");
  92   2            delay_ms(1000);
  93   2            LCD_Clear();
  94   2            delay_ms(500);
  95   2          }
  96   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    327    ----
   CONSTANT SIZE    =     29    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
