C51 COMPILER V9.60.0.0   MAIN                                                              10/19/2019 16:20:45 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: A:\Learning Tools\KeiC 5\Keilc_C51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTE
                    -ND TABS(2)

line level    source

   1          #include <REGX52.H>
   2          #include <stdio.h>
   3          #define LCD_RS  P0_0
   4          #define LCD_RW  P0_1
   5          #define LCD_EN  P0_2
   6          #define LCD_D4  P0_4
   7          #define LCD_D5  P0_5
   8          #define LCD_D6  P0_6
   9          #define LCD_D7  P0_7
  10          //====================================//
  11          #define bt_up     P1_0  
  12          #define bt_dow      P1_1
  13          #define bt_right  P1_2
  14          #define bt_left     P1_3
  15          #define stop      P1_4
  16          #define start     P1_5
  17          #define low     P3_6
  18          #define high    P3_7    
  19           //=================oOo=============//
  20          unsigned int count=0,y,z[4],g,chieu;
  21          unsigned char ud;
  22          float dem,x;
  23          
  24          char duty ;
  25          //=================oOo=============//
  26          void delay_us(unsigned int t){
  27   1              unsigned int i;
  28   1              for(i=0;i<t;i++);
  29   1      }
  30          void delay_ms(unsigned int t){
  31   1              unsigned int i,j;
  32   1              for(i=0;i<t;i++)
  33   1              for(j=0;j<125;j++);}
  34          /***********Ctr giao tiep LCD 16x2 4bit**********************/
  35          void LCD_Enable(void){
  36   1              LCD_EN =1;
  37   1              delay_us(3);
  38   1              LCD_EN =0;
  39   1              delay_us(90); 
  40   1      }
  41          //Ham Gui 4 Bit Du Lieu Ra LCD
  42          void LCD_Send4Bit(unsigned char Data){
  43   1              LCD_D4=Data & 0x01;
  44   1              LCD_D5=(Data>>1)&1;
  45   1              LCD_D6=(Data>>2)&1;
  46   1              LCD_D7=(Data>>3)&1;
  47   1      }
  48          // Ham Gui 1 Lenh Cho LCD
  49          void LCD_SendCommand(unsigned char command){
  50   1              LCD_Send4Bit(command >>4);/* Gui 4 bit cao */
  51   1              LCD_Enable();
  52   1              LCD_Send4Bit(command); /* Gui 4 bit thap*/
  53   1              LCD_Enable();
  54   1      }
C51 COMPILER V9.60.0.0   MAIN                                                              10/19/2019 16:20:45 PAGE 2   

  55          void LCD_Clear(){// Ham Xoa Man Hinh LCD
  56   1              LCD_SendCommand(0x01); 
  57   1              delay_us(10);
  58   1      }
  59          // Ham Khoi Tao LCD
  60          void LCD_Init(){
  61   1              LCD_Send4Bit(0x00);   //turn on LCD
  62   1              delay_ms(20);
  63   1              LCD_RS=0;
  64   1              LCD_RW=0;
  65   1              LCD_Send4Bit(0x03);   //function setting
  66   1              LCD_Enable();
  67   1              delay_ms(5);
  68   1              LCD_Enable();
  69   1              delay_us(100);
  70   1              LCD_Enable();
  71   1              LCD_Send4Bit(0x02);   //di chuyen con tro ve dau man hnh
  72   1              LCD_Enable();
  73   1              LCD_SendCommand( 0x28 ); //lua chon che do 4 bit
  74   1              LCD_SendCommand( 0x0c);  // bat hien thi va tat con tro di
  75   1              LCD_SendCommand( 0x06 );
  76   1              LCD_SendCommand(0x01);
  77   1      }
  78          void LCD_Gotoxy(unsigned char x, unsigned char y){
  79   1              unsigned char address;
  80   1              if(!y)address=(0x80+x);
  81   1              else address=(0xc0+x);
  82   1              delay_us(1000);
  83   1              LCD_SendCommand(address);
  84   1              delay_us(50);
  85   1      }
  86          void LCD_PutChar(unsigned char Data){
  87   1              LCD_RS=1;
  88   1              LCD_SendCommand(Data);
  89   1              LCD_RS=0 ;
  90   1      }
  91          void LCD_Puts(char *s){
  92   1              while (*s){
  93   2                      LCD_PutChar(*s);
  94   2                      s++;
  95   2              }
  96   1      }
  97          
  98          void num_dsp( float number)
  99          {
 100   1          unsigned char str[5];
 101   1        sprintf(str,"%3.0f",number);
 102   1        LCD_Puts(str);
 103   1      }
 104          //====================PWM================================
 105          sbit PWM_PIN = P3^0;
 106          
 107          unsigned int T, Ton, Toff;
 108          
 109          unsigned char Ton_h_reload, Ton_l_reload, Toff_h_reload, Toff_l_reload;
 110          
 111          // ck (us)
 112          void PWM_Init(unsigned int ck)
 113          { 
 114   1        PWM_PIN = 1;
 115   1        TMOD |= 0x01;   // Timer0 hoat dong o mode 1
 116   1        ET0 = 1;      // Cho phep ngat Timer0
C51 COMPILER V9.60.0.0   MAIN                                                              10/19/2019 16:20:45 PAGE 3   

 117   1        EA = 1;       // Cho phep ngat toan cuc 
 118   1        T  = ck;
 119   1        Ton = T/2;      // Duty Cycle = 50%
 120   1        Toff = T - Ton;
 121   1      
 122   1        Ton_h_reload = (65536-Ton)>>8;     //tinh toan gia tri Ton
 123   1        Ton_l_reload = (65536-Ton)&0x00FF;
 124   1      
 125   1        Toff_h_reload = (65536-Toff)>>8;  //tinh toan gia tri Toff
 126   1        Toff_l_reload = (65536-Toff)&0x00FF;
 127   1        
 128   1        TH0 = Ton_h_reload;         // nap gia tri Ton cho T0
 129   1        TL0 = Ton_l_reload; 
 130   1      }
 131          
 132          void PWM_Start()
 133          {
 134   1        TR0 = 1;      // Timer0 bat dau dem
 135   1      }
 136          
 137          void PWM_Stop()
 138          {
 139   1        TR0 = 0;      // Timer0 ngung dem
 140   1      }
 141          
 142          // duty: 0 den 100
 143          void PWM_Set_Duty()    // chuong trinh con thay doi do rong xung
 144          { 
 145   1        
 146   1        
 147   1        if(duty == 0)
 148   1        {
 149   2          PWM_PIN = 0;
 150   2          ET0 = 0;
 151   2        }
 152   1        else if(duty == 100)
 153   1        {
 154   2          PWM_PIN = 1;
 155   2          ET0 = 0;
 156   2        }
 157   1        else
 158   1        {
 159   2          Ton = ((unsigned long)T)*duty/100;
 160   2          Toff = T - Ton;
 161   2        
 162   2            Ton_h_reload = (65536-Ton)>>8;
 163   2          Ton_l_reload = (65536-Ton)&0x00FF;
 164   2        
 165   2          Toff_h_reload = (65536-Toff)>>8;
 166   2          Toff_l_reload = (65536-Toff)&0x00FF;
 167   2      
 168   2          ET0 = 1;
 169   2        }
 170   1        
 171   1      }
 172          
 173          //=======================================================
 174          void chieu_quay() //chuong trinh con xac dinh chieu quay
 175          
 176          { 
 177   1             if(bt_right==0) {P2=0x03;}
 178   1           if(bt_left==0)  {P2=0x0C;}
C51 COMPILER V9.60.0.0   MAIN                                                              10/19/2019 16:20:45 PAGE 4   

 179   1           if(x==0)
 180   1            {
 181   2               if(P2==0x03)  {LCD_Gotoxy(0,0);LCD_Puts("P"); }
 182   2             if(P2==0x0C)  {LCD_Gotoxy(0,0); LCD_Puts("T");}
 183   2            }
 184   1        if(stop==0)
 185   1        P2=0x00;
 186   1          
 187   1      }  
 188          void canhbao()        // chuong trinh con canh bao 
 189          {
 190   1          if(x>1800) high=1;
 191   1        if(x<500)  low=1;
 192   1        if(x<=1800&&x>=500) low=high=0; 
 193   1       
 194   1         
 195   1      }
 196          void cd()         // chuong trinh con tinh toan va hien thi
 197          {
 198   1          x=(60*dem)/(360*0.01980);
 199   1        
 200   1        LCD_Gotoxy(8,0);
 201   1        LCD_Puts("%PWM:");
 202   1        num_dsp(ud);
 203   1        LCD_Gotoxy(0,1);
 204   1        LCD_Puts("Toc do:");
 205   1         
 206   1        num_dsp(x);
 207   1        LCD_Puts(" v/p");
 208   1      
 209   1      }
 210          void set_ud()   // chuong trinh con tang giam duty bang nut nhan
 211          {
 212   1          if(bt_up==0) ud=ud+1; 
 213   1        if(bt_dow==0) ud=ud-1;
 214   1        if(ud>100) ud=100;
 215   1        if (start==0) duty=ud;
 216   1      }
 217          void main()
 218          {   LCD_Init();
 219   1        EA=0;
 220   1        TMOD|=0x50;     
 221   1        TH1=0x00;
 222   1        TL1=0x00;
 223   1          //  khoi tao T2
 224   1          T2CON=0x00;
 225   1        RCAP2H=0xB1;RCAP2L=0xE0;
 226   1        
 227   1        TR2=1;
 228   1        ET2=1;
 229   1          EA=1;
 230   1        //khoi tao cong vao ra
 231   1        P2=0x00;
 232   1        low=high=0;
 233   1        LCD_Clear();
 234   1      //------------------
 235   1        duty=ud=45;
 236   1          PWM_Init(10000); //t=10ms
 237   1      
 238   1              while(1)
 239   1          {
 240   2        //-----------------------------
C51 COMPILER V9.60.0.0   MAIN                                                              10/19/2019 16:20:45 PAGE 5   

 241   2        chieu_quay();
 242   2        cd();
 243   2        canhbao();
 244   2        //---------------
 245   2        PWM_Set_Duty();
 246   2        PWM_Start();  
 247   2          }
 248   1      }
 249          
 250          void INT_T2() interrupt 5 using 0      //chuong trinh ngat lay mau xung 
 251          { unsigned char high,low;
 252   1      
 253   1          TF2=0;
 254   1        TR1=0;
 255   1        high=TH1; low=TL1;
 256   1        y=high ;y<<=8; y|=low;
 257   1        TL1=TH1=0x00;
 258   1        TR1=1;
 259   1        
 260   1        z[count]=y;
 261   1        count++; 
 262   1        if(count==3){dem=((z[0]+z[1]+z[2])/3); count=0;}
 263   1        //------------------
 264   1        set_ud();
 265   1          
 266   1                                                                                                                                 
 267   1      }
 268          //=============================================================
 269          void INT_T0() interrupt  1          // chuong trinh ngat bam xung PWM
 270          {
 271   1        
 272   1        PWM_PIN = !PWM_PIN;
 273   1        if(PWM_PIN==0)
 274   1        {
 275   2          TH0 = Toff_h_reload;
 276   2          TL0 = Toff_l_reload;
 277   2        }
 278   1        else
 279   1        {
 280   2          TH0 = Ton_h_reload;
 281   2          TL0 = Ton_l_reload;
 282   2        }
 283   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1096    ----
   CONSTANT SIZE    =     29    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     36       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
